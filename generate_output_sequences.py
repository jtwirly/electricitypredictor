# Define a function that generates output sequences from the GPT-3 model, given an input sequence generated by the previous function.

import requests
import json 
import openai
import os

#initialize OpenAI API key
openai.api_key = os.environ["OPENAI_API_KEY"]

def generate_output_sequence(input_sequence, model_engine="text-davinci-002"):
    print("Generating output sequence...")
    print("Input sequence:", input_sequence)
    # Set up the API request
    api_url = "https://api.openai.com/v1/engines/" + model_engine + "/completions"
    headers = {"Content-Type": "application/json", "Authorization": f"Bearer {openai.api_key}"}
    data = {
        "prompt": f"Based on the information: {input_sequence['context']}, please provide the next hour's electricity price in cents/kWh and demand in kWh in the following format: 'Price: X.XX cents/kWh. Demand: YYYYYY.Y kWh.'",
        "max_tokens": 100,
        "temperature": 0.7,
        "n": 1,
        "stop": "\n"
    }
  
    #print("data:", data)
    #return data["choices"][0]["text"].strip()

    # Send the API request and parse the response
    output_sequence = ""
    while not output_sequence.strip():
        # Send the API request and parse the response
        response = requests.post(api_url, headers=headers, data=json.dumps(data))
        response_data = response.json()
        print("Response:", response_data)
        output_sequence = response_data["choices"][0]["text"].strip()

        if not output_sequence.strip():
            print("Empty output, retrying...")

    print("Output sequence:", output_sequence)

    return output_sequence
